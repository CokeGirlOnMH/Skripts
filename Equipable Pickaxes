# EQUIP PICKAXES #

options:
    prefix: &d&lMining &8➠

command /pickaxe [<player>]:
    permission: op
    trigger:
        set {_pick} to shiny diamond pickaxe named "&d&lMiner Pickaxe" with lore "", "&f▸ Enchants", "", "&f▸ &7Efficiency 0", "&f▸ &7Fortune 0", "&f▸ &7KeyFinder 0", "&f▸ &7LootFinder 0", "&f▸ &7MissionFinder 0", "&f▸ &7Lucky 0", "" with all flags hidden
        add "{efficiency:0}" to nbt of {_pick}
        add "{fortune:0}" to nbt of {_pick}
        add "{keyfinder:0}" to nbt of {_pick}
        add "{lootfinder:0}" to nbt of {_pick}
        add "{missionfinder:0}" to nbt of {_pick}
        add "{lucky:0}" to nbt of {_pick}
        add "{charity:0}" to nbt of {_pick}
        give arg-1 1 of {_pick}

command /testnbt:
    trigger:
        send "%nbt of player's tool%"

function getLevel(id: string, p: player) :: integer:
    set {_level} to (tag "%{_id}%" of nbt of {_p}'s tool)
    return {_level}

function registerEnchant(index: integer, id: string, item: itemtype, name: string, desc: string, max: integer, pricemulti: number):
    set {-mining::enchants::%{_index}%} to {_id}
    set {-mining::enchants::%{_index}%::item} to {_item}
    set {-mining::enchants::%{_index}%::name} to {_name}
    set {-mining::enchants::%{_index}%::desc} to {_desc}
    set {-mining::enchants::%{_index}%::max} to {_max}
    set {-mining::enchants::%{_index}%::pricemulti} to {_pricemulti}
    set {-mining::enchants::%{_index}%::color} to last color of {_name}

on load:
    delete {-mining::enchants::*}
    #             index  name         icon in gui          name          desc                               max price multi (level * this number)
    registerEnchant(1, "efficiency", diamond pickaxe, "&3Efficiency", "To break blocks faster, upgrade me!", 5, 500)
    registerEnchant(2, "fortune", diamond, "&bFortune", "To gain more blocks, upgrade me!", 5, 500)
    registerEnchant(3, "keyfinder", tripwire hook, "&fKeyFinder", "To gain keys sometimes, upgrade me!", 5, 500)
    registerEnchant(4, "lootfinder", orange shulker box, "&6LootFinder", "To gain lootboxes sometimes, upgrade me!", 5, 500)
    registerEnchant(5, "missionfinder", paper, "&aMissionFinder", "To gain contracts, upgrade me!", 5, 500)
    registerEnchant(6, "lucky", sunflower, "&eLucky", "To gain genslots sometimes, upgrade me!", 5, 500)
    registerEnchant(7, "charity", emerald, "&2Chairty", "To give everyone money sometimes, upgrade me!", 5, 500)

function pickaxeGui(p: player):
    create a gui with virtual chest inventory named "Enchanting %name of {_p}'s tool%":
        make gui slot (all integers between 0 and 26) with black stained glass pane named "&7" with all flags hidden
        set {_slot} to 10

        loop {-mining::enchants::*}:
            set {_enchant} to {-mining::enchants::%loop-index%}
            set {_item} to {-mining::enchants::%loop-index%::item}
            set {_name} to {-mining::Enchants::%loop-index%::name}
            set {_desc} to {-mining::Enchants::%loop-index%::desc}
            set {_max} to {-mining::Enchants::%loop-index%::max}
            set {_multi} to {-mining::Enchants::%loop-index%::pricemulti}
            set {_color} to {-mining::Enchants::%loop-index%::color}
            set {_level} to getLevel("%{_enchant}%", {_p})
            set {_index} to loop-index parsed as an integer
            make gui slot {_slot} with {_item} named "%{_color}%&l| %{_name}%" with lore "", "&7• %{_color}%Level &a%{_level}%&7/&c%{_max}%", "&7• %{_color}%Price: &d⛃&f%{_multi} * ({_level} + 1)%", "", "&7• &fDescription", "&7• %{_color}%%{_desc}%", "", "&7• &fClick to Enchant 1 Level" with all flags hidden:
                if {tokens::%player%} is less than ({_multi} * ({_level} + 1)):
                    send "{@prefix} &fPlease get ur money up!" to {_p}
                    stop
                if {_level} = {_max}:
                    send "{@prefix} &fUr too good!" to {_p}
                    stop
                if {_enchant} is "efficiency":
                    enchant {_p}'s tool with "efficiency %level of efficiency of {_p}'s tool + 1%" parsed as enchantment type
                remove ({_multi} * ({_level} + 1)) from {tokens::%player%}
                add "{%{_enchant}%:%{_level} + 1%}" to nbt of {_p}'s tool
                set line (3 + {_index}) of lore of {_p}'s tool to "&f▸ &7%uncolored {_name}% %{_level} + 1%"
                pickaxeGui({_p})
            if {_max} = {_level}:
                make gui slot {_slot} with {_item} named "%{_color}%&l| %{_name}%" with lore "", "&7• %{_color}%Level &c%{_level}%&7/&c%{_max}%", "&7• %{_color}%Price: &c&lMAX", "", "&7• &fDescription", "&7• %{_color}%%{_desc}%", "", "&7• &fYou are at the max level enchant" with all flags hidden
            add 1 to {_slot}
            if mod({_slot}+1, 9) = 0:
                add 2 to {_slot}
    open last gui to {_p}

on right click with diamond pickaxe:
    name of player's tool contains "Miner Pickaxe"
    pickaxeGui(player)
                
